/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoConstants.java */
package asin;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorSintacticoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Letra = 1;
  /** RegularExpression Id. */
  int NoCero = 2;
  /** RegularExpression Id. */
  int Cero = 3;
  /** RegularExpression Id. */
  int Cifra = 4;
  /** RegularExpression Id. */
  int Punto = 5;
  /** RegularExpression Id. */
  int CaracterValido = 6;
  /** RegularExpression Id. */
  int ParteReal = 7;
  /** RegularExpression Id. */
  int ParteAmbas = 8;
  /** RegularExpression Id. */
  int PartePunto = 9;
  /** RegularExpression Id. */
  int ParteExp = 10;
  /** RegularExpression Id. */
  int TEnt = 12;
  /** RegularExpression Id. */
  int TReal = 13;
  /** RegularExpression Id. */
  int TBool = 14;
  /** RegularExpression Id. */
  int And = 15;
  /** RegularExpression Id. */
  int Not = 16;
  /** RegularExpression Id. */
  int Or = 17;
  /** RegularExpression Id. */
  int True = 18;
  /** RegularExpression Id. */
  int False = 19;
  /** RegularExpression Id. */
  int PAper = 20;
  /** RegularExpression Id. */
  int PCie = 21;
  /** RegularExpression Id. */
  int EQ = 22;
  /** RegularExpression Id. */
  int LT = 23;
  /** RegularExpression Id. */
  int GT = 24;
  /** RegularExpression Id. */
  int GE = 25;
  /** RegularExpression Id. */
  int LE = 26;
  /** RegularExpression Id. */
  int NE = 27;
  /** RegularExpression Id. */
  int PComa = 28;
  /** RegularExpression Id. */
  int Separador = 29;
  /** RegularExpression Id. */
  int Mas = 30;
  /** RegularExpression Id. */
  int Menos = 31;
  /** RegularExpression Id. */
  int Div = 32;
  /** RegularExpression Id. */
  int Por = 33;
  /** RegularExpression Id. */
  int Asig = 34;
  /** RegularExpression Id. */
  int NombreVariable = 35;
  /** RegularExpression Id. */
  int NumEnt = 36;
  /** RegularExpression Id. */
  int NumReal = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<Letra>",
    "<NoCero>",
    "\"0\"",
    "<Cifra>",
    "\".\"",
    "<CaracterValido>",
    "<ParteReal>",
    "<ParteAmbas>",
    "<PartePunto>",
    "<ParteExp>",
    "<token of kind 11>",
    "\"int\"",
    "\"real\"",
    "\"bool\"",
    "\"and\"",
    "\"not\"",
    "\"or\"",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"==\"",
    "\"<\"",
    "\">\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\";\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"=\"",
    "<NombreVariable>",
    "<NumEnt>",
    "<NumReal>",
  };

}
